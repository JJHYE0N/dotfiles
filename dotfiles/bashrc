wm () {
	xprop | awk '
		/^WM_CLASS/{sub(/.* =/, "instance:"); sub(/,/, "\nclass:"); print}
		/^WM_NAME/{sub(/.* =/, "title:"); print}'
}
twitch () {
	youtube-dl --quiet -o - "https://www.twitch.tv/""$1" | cvlc -f - &
	# https://www.twitch.tv/popout/$1/chat?popout=
}
snapicons () {
	local app=$1
	local path="/var/lib/snapd/desktop/applications"
	local icon=""
	if [ "$app" == "lol" ] || [ "$app" == "leagueoflegends" ]; then
		icon="leagueoflegends"
		app="leagueoflegends_leagueoflegends.desktop"

	elif [ "$app" == "discord" ]; then
		icon="discord"
		app="discord_discord.desktop"

	elif [ "$app" == "system" ]; then
		icon="system"
		app="gnome-system-monitor_gnome-system-monitor.desktop"

	else
		return 1
	fi

	sudo sed -ri 's/(Icon=)(.*)/\1'$icon'/' "$path/$app"
}

export PAGER="less"
export EDITOR=/usr/bin/vim

# Bash settings
set -o vi
bind 'set show-mode-in-prompt on'
bind 'set vi-cmd-mode-string "\1\e[1;48;2;220;50;47;38;2;255;255;255m\2  \1\e[0m\2"'
bind 'set vi-ins-mode-string "\1\e[1;48;2;0;135;175;38;2;255;255;255m\2  \1\e[0m\2"'
# Disable pressing <C-s> to freeze.
stty -ixon
complete -cf sudo
bind -m vi-insert "\C-l":clear-screen
bind -m vi-insert "\C-[":vi-movement-mode
# bind -x '"\C-m": "tmux new-window cmus"'
bind -x '"\C-o": "ranger"'
bind '"\C-j": history-search-forward'
bind '"\C-k": history-search-backward'
alias grep='grep --color=auto'
alias mnt='udisksctl mount -b'
alias umnt='udisksctl unmount -b'
alias rm='rm -i'
alias ls='ls --color -h --group-directories-first'
alias l.='ls -d .* --color=auto'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias gm='cd $HOME/Music'
alias gd='cd $HOME/Downloads'
alias gv='cd $HOME/Videos'
# Move to the directory when exiting.
# alias ranger='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR";'
alias bashrc="vim ${BASH_SOURCE[0]} -c 'normal zt'"
alias vimrc="vim $HOME/.vimrc"
alias sxiv='sxiv -a -f'
alias update-grub='sudo grub-mkconfig -o /boot/grub/grub.cfg'

# Tmux
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
	exec tmux
fi

# Powerline-status
PATH="$HOME/.local/bin:$PATH"
export POWERLINE_COMMAND=powerline
if [ -f ~/.local/lib/python3*/site-packages/powerline/bindings/bash/powerline.sh ]; then
	source ~/.local/lib/python3*/site-packages/powerline/bindings/bash/powerline.sh
fi

# Colorls (https://github.com/athityakumar/colorls)
# source $(dirname $(gem which colorls))/tab_complete.sh
# alias lc='colorls -lA --sd'

